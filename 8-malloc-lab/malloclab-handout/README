#####################################################################
# CS:APP 动态内存分配实验室
# 学生手册文件
#
# 版权所有 (c) 2002, R. Bryant 和 D. O'Hallaron，保留所有权利。
# 未经许可，不得使用、修改或复制。
#
######################################################################

***********
主要文件：
***********

mm.{c,h}	
	这是您需要完成的动态内存分配包。mm.c是您将要提交的文件，也是唯一应该修改的文件。

mdriver.c	
	用于测试您的mm.c文件的动态内存分配驱动程序

short{1,2}-bal.rep
	两个非常小的跟踪文件，帮助您开始实验。

Makefile	
	用于构建驱动程序的Makefile。

**********************************
驱动程序的其他支持文件
**********************************

config.h	配置动态内存分配实验室驱动程序
fsecs.{c,h}	不同计时包的包装函数
clock.{c,h}	访问Pentium和Alpha周期计数器的例程
fcyc.{c,h}	基于周期计数器的计时函数
ftimer.{c,h}	基于间隔计时器和gettimeofday()的计时函数
memlib.{c,h}	模拟堆和sbrk函数

*******************************
构建和运行驱动程序
*******************************
要构建驱动程序，请在shell中键入 "make"。

要在微小的测试跟踪上运行驱动程序：

	unix> mdriver -V -f short1-bal.rep

-V 选项会打印出有用的跟踪和摘要信息。

要获取驱动程序标志的列表：

	unix> mdriver -h


#####################################################################
# CS:APP Malloc Lab
# Handout files for students
#
# Copyright (c) 2002, R. Bryant and D. O'Hallaron, All rights reserved.
# May not be used, modified, or copied without permission.
#
######################################################################

***********
Main Files:
***********

mm.{c,h}	
	Your solution malloc package. mm.c is the file that you
	will be handing in, and is the only file you should modify.

mdriver.c	
	The malloc driver that tests your mm.c file

short{1,2}-bal.rep
	Two tiny tracefiles to help you get started. 

Makefile	
	Builds the driver

**********************************
Other support files for the driver
**********************************

config.h	Configures the malloc lab driver
fsecs.{c,h}	Wrapper function for the different timer packages
clock.{c,h}	Routines for accessing the Pentium and Alpha cycle counters
fcyc.{c,h}	Timer functions based on cycle counters
ftimer.{c,h}	Timer functions based on interval timers and gettimeofday()
memlib.{c,h}	Models the heap and sbrk function

*******************************
Building and running the driver
*******************************
To build the driver, type "make" to the shell.

To run the driver on a tiny test trace:

	unix> mdriver -V -f short1-bal.rep

The -V option prints out helpful tracing and summary information.

To get a list of the driver flags:

	unix> mdriver -h

