####################################################################
# CS:APP 代理实验室
#
# 学生源文件
####################################################################

此目录包含您在CS:APP代理实验室中需要的所有文件。

- proxy.c
- csapp.h
- csapp.c
    这些是起始文件。`csapp.c`和`csapp.h`在您的教科书中有所描述。
    
    您可以对这些文件进行任意修改，并且可以创建和提交任何其他附加文件。

    请使用`port-for-user.pl`或`free-port.sh`为您的代理或tiny服务器生成唯一的端口。

- Makefile
    这是用来构建代理程序的Makefile。键入"make"来构建您的解决方案，或者通过"make clean"后跟"make"来进行全新的构建。
    
    键入"make handin"来创建您将要提交的tar包。您可以以任何方式修改它。您的教师将使用您的Makefile从源代码构建您的代理。

- port-for-user.pl
    为特定用户生成一个随机端口。
    使用方法：`./port-for-user.pl <userID>`

- free-port.sh
    一个方便的脚本，用于识别未使用的TCP端口，您可以为您的代理或tiny使用。
    使用方法：`./free-port.sh`

- driver.sh
    基本功能、并发性和缓存的自动评分器。
    使用方法：`./driver.sh`

- nop-server.py
    自动评分器的辅助工具。

- tiny
    来自CS:APP教材的Tiny Web服务器。


####################################################################
# CS:APP Proxy Lab
#
# Student Source Files
####################################################################

This directory contains the files you will need for the CS:APP Proxy
Lab.

proxy.c
csapp.h
csapp.c
    These are starter files.  csapp.c and csapp.h are described in
    your textbook. 

    You may make any changes you like to these files.  And you may
    create and handin any additional files you like.

    Please use `port-for-user.pl' or 'free-port.sh' to generate
    unique ports for your proxy or tiny server. 

Makefile
    This is the makefile that builds the proxy program.  Type "make"
    to build your solution, or "make clean" followed by "make" for a
    fresh build. 

    Type "make handin" to create the tarfile that you will be handing
    in. You can modify it any way you like. Your instructor will use your
    Makefile to build your proxy from source.

port-for-user.pl
    Generates a random port for a particular user
    usage: ./port-for-user.pl <userID>

free-port.sh
    Handy script that identifies an unused TCP port that you can use
    for your proxy or tiny. 
    usage: ./free-port.sh

driver.sh
    The autograder for Basic, Concurrency, and Cache.        
    usage: ./driver.sh

nop-server.py
     helper for the autograder.         

tiny
    Tiny Web server from the CS:APP text

